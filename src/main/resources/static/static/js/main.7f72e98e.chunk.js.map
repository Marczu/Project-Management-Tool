{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","playload","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullname","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectTasks","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","fullName","password","confirmPassword","newUser","console","log","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_token","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f72e98e.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\"\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project);\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\");\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        playload: res.data\r\n    })\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        history.push(\"/dashboard\")\r\n    } \r\n}\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if(window.confirm(\r\n        \"Napewno chcesz usunąc projekt?\")\r\n        ){\r\n        await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n    \r\n}\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport { deleteProject } from \"../../actions/projectActions\"\r\n\r\nclass ProjectItem extends Component {\r\n  \r\n  onDeleteClick = id => {\r\n      this.props.deleteProject(id)\r\n  }\r\n\r\n  render() {\r\n    const {project} = this.props;  \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card card-body bg-light mb-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-4 col-8\">\r\n                        <h3>{project.projectName}</h3>\r\n                        <p>{project.description}</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 d-none d-lg-block\">\r\n                        <ul className=\"list-group\">\r\n                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item board\">\r\n                                    <i className=\"fa fa-flag-checkered pr-1\"> Tablica Projektów </i>\r\n                                </li>\r\n                            </Link>\r\n                            <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item update\">\r\n                                    <i className=\"fa fa-edit pr-1\"> Uaktualnij Projekt</i>\r\n                                </li>\r\n                            </Link>\r\n                            \r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this,\r\n                                    project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Usuń Projekt</i>\r\n                                </li>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectItem.propTypes={\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProject}) (ProjectItem);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Stwórz Projekt\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projekty</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\"\r\n\r\nconst setJWTToken = token =>{\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"]\r\n    }\r\n}\r\n\r\nexport default setJWTToken;","import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport setJWTToken from '../securityUtils/setJWTToken';\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n\r\n    try {\r\n    // Post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    //extract token from res.data\r\n    const {token} = res.data\r\n    //store tonen in localStorage\r\n    localStorage.setItem(\"jwtToken\", token)\r\n    //set token in headers\r\n    setJWTToken(token)\r\n    //decode token in React\r\n    const decoded = jwt_decode(token)\r\n    //dispatch to our security reducer\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    })\r\n} ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = '/';\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    //GUEST USER\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Rejestracja\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Logowanie\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    // LOGGED USER\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/dashboard\">\r\n              Panel\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullname}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Wyloguj się\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if(validToken && user){\r\n        headerLinks = userIsAuthenticated\r\n    }else{\r\n        headerLinks = userIsNotAuthenticated\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from \"classnames\"\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: '',\r\n      projectIdentifier: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">\r\n                  Utwórz formularz projektu\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\":errors.projectName\r\n                      })}\r\n                      name=\"projectName\"\r\n                      placeholder=\"Nazwa Projektu\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                       <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\":errors.projectIdentifier\r\n                      })}\r\n                      name=\"projectIdentifier\"\r\n                      placeholder=\"Unikalne ID Projektu\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                   )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\":errors.description\r\n                    })}\r\n                      name=\"description\"\r\n                      placeholder=\"Opis Projektu\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">{errors.description}</div>\r\n                   )}\r\n                  </div>\r\n                  <h6>Data zaczęcia</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Szacowany czas ukończenia</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.playload\r\n            };\r\n        \r\n        case GET_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT:\r\n            return{\r\n                ...state,\r\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n\r\n        case GET_BACKLOG:\r\n        return {\r\n            ...state,\r\n            project_tasks: action.payload\r\n        };\r\n\r\n        case GET_PROJECT_TASK:\r\n        return{\r\n            ...state,\r\n            project_task: action.payload\r\n        };\r\n\r\n        case DELETE_PROJECT_TASK:\r\n        return{\r\n            ...state,\r\n            project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n        };\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    validToken: false,\r\n    user: {}\r\n}\r\n\r\nconst booleanActionPlayload = (payload) => {\r\n    if(payload){\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        \r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validToken: booleanActionPlayload(action.payload),\r\n                user: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n    \r\n}","import {combineReducers} from \"redux\"\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n    errors:errorReducer,\r\n    project:projectReducer,\r\n    backlog:backlogReducer,\r\n    security:securityReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(applyMiddleware(...middleware), \r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n    );\r\n} else {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(applyMiddleware(...middleware))\r\n        );\r\n}\r\n\r\nexport default store;\r\n\r\n","import React, { Component } from 'react';\r\nimport {getProject, createProject} from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n        \r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params\r\n        this.props.getProject(id, this.props.history)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n\r\n        this.props.createProject(updateProject, this.props.history)\r\n    }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n        <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Aktualizacja Projektu</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\": errors.projectName\r\n                            })} \r\n                            placeholder=\"Nazwa Projektu\" \r\n                            name=\"projectName\"\r\n                            value={this.state.projectName}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                            {\r\n                                errors.projectName && (\r\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className=\"form-control form-control-lg\" \r\n                            placeholder=\"Unikalne ID Projektu\"\r\n                            name=\"projectIdentifier\"\r\n                            value={this.state.projectIdentifier}\r\n                            onChange = {this.onChange}\r\n                            disabled \r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <textarea \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\": errors.description\r\n                            })} \r\n                            placeholder=\"Opis Projektu\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                            {\r\n                                errors.description && (\r\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <h6>Data zaczęcia</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" \r\n                            className=\"form-control form-control-lg\" \r\n                            name=\"start_date\" \r\n                            value={this.state.start_date}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                        </div>\r\n                        <h6>Szacowany czas ukończenia</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" \r\n                            name=\"end_date\" \r\n                            value={this.state.end_date}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProject, createProject}) (UpdateProject);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\n class ProjectTask extends Component {\r\n  \r\n  onDeleteClick(backlog_id, pt_id){\r\n      this.props.deleteProjectTask(backlog_id, pt_id)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {project_task} = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if(project_task.priority === 1){\r\n        priorityClass = \"bg-danger text-light\"\r\n        priorityString = \"WYSOKI\"\r\n    }\r\n\r\n    if(project_task.priority === 2){\r\n        priorityClass = \"bg-warning text-light\"\r\n        priorityString = \"ŚREDNI\"\r\n    }\r\n\r\n    if(project_task.priority === 3){\r\n        priorityClass = \"bg-info text-light\"\r\n        priorityString = \"NISKI\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mb-1 bg-light\">\r\n\r\n            <div className={`card-header text-primary ${priorityClass}`}>\r\n                ID: {project_task.projectSequence} -- Priorytet: {priorityString}\r\n            </div>\r\n            <div className=\"card-body bg-light\">\r\n                <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                <p className=\"card-text text-truncate \">\r\n                    {project_task.acceptanceCriteria}\r\n                </p>\r\n                <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                    Zobacz / Uaktualnij\r\n                </Link>\r\n\r\n                <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\r\n                    Usuń\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProjectTask}) (ProjectTask);\r\n","import axios from \"axios\"\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\"\r\n\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n    try{\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n   \r\n}\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if(window.confirm(`Czy napewno chcesz usunać zadanie ${pt_id} ?`)){\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        })\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\n\r\n class Backlog extends Component {\r\n\r\n  render() {\r\n    const {project_tasks_prop} = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n        <ProjectTask key={project_task.id} project_task={project_task} />\r\n      ));\r\n  \r\n      let todoItems = [];\r\n      let inProgressItems = [];\r\n      let doneItems = [];\r\n  \r\n      for (let i = 0; i < tasks.length; i++) {\r\n       \r\n        if (tasks[i].props.project_task.status === \"DO ZROBIENIA\") {\r\n          todoItems.push(tasks[i]);\r\n        }\r\n\r\n        if (tasks[i].props.project_task.status === \"W TRAKCIE\") {\r\n            inProgressItems.push(tasks[i]);\r\n          }\r\n    \r\n          if (tasks[i].props.project_task.status === \"ZROBIONY\") {\r\n            doneItems.push(tasks[i]);\r\n          }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>Do zrobienia</h3>\r\n                        </div>\r\n                    </div>\r\n                    {todoItems}\r\n                    {\r\n                        //insert tasks here\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>W trakcie</h3>\r\n                        </div>\r\n                    </div>\r\n                    {inProgressItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Zrobione</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItems}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../../actions/backlogActions';\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, projectTasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              Brak zadań na tablicy\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Utwórz zadanie</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n  constructor(props){\r\n      super(props)\r\n      const {id} = this.props.match.params\r\n\r\n      this.state = {\r\n        \"summary\": \"\",\r\n        \"acceptanceCriteria\": \"\",\r\n        \"status\": \"\",\r\n        \"priority\": 0,\r\n        \"dueDate\": \"\",\r\n        \"projectIdentifier\": id,\r\n        \"errors\": {}\r\n      }\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n      if(nextProps.errors){\r\n          this.setState({errors:nextProps.errors})\r\n      }\r\n  }\r\n\r\n  onChange(e) {\r\n      this.setState({[e.target.name]:e.target.value});\r\n  }\r\n\r\n  onSubmit(e){\r\n      e.preventDefault();\r\n      \r\n      const newTask = {\r\n        \"summary\": this.state.summary,\r\n        \"acceptanceCriteria\": this.state.acceptanceCriteria,\r\n        \"status\": this.state.status,\r\n        \"priority\": this.state.priority,\r\n        \"dueDate\": this.state.dueDate,\r\n      }\r\n\r\n      this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history)\r\n  }\r\n\r\n  render() {\r\n    const {id} = this.props.match.params;\r\n    const {errors} = this.state\r\n    return (\r\n        <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Powrót do tablicy Projektu\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Dodaj nowe zadanie</h4>\r\n                    <p className=\"lead text-center\"></p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\":errors.summary\r\n                            } )}\r\n                            name=\"summary\" \r\n                            placeholder=\"Streszczenie zadania\" \r\n                            value={this.state.summary}\r\n                            onChange={this.onChange}\r\n                            />\r\n                            {\r\n                                errors.summary && (\r\n                                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" \r\n                            placeholder=\"Kryteria przyjęcia\" \r\n                            name=\"acceptanceCriteria\" \r\n                            value={this.state.acceptanceCriteria}\r\n                            onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <h6>Termin zadania</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" \r\n                            className=\"form-control form-control-lg\" \r\n                            name=\"dueDate\" \r\n                            value={this.state.dueDate}\r\n                            onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"priority\"\r\n                            value={this.state.priority}\r\n                            onChange={this.onChange}\r\n                            >\r\n                                <option value={0}>Wybierz priorytet</option>\r\n                                <option value={1}>Wysoki</option>\r\n                                <option value={2}>Średni</option>\r\n                                <option value={3}>Niski</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}\r\n                            >\r\n                                <option value=\"\">Wybierz status</option>\r\n                                <option value=\"DO ZROBIENIA\">DO ZROBIENIA</option>\r\n                                <option value=\"W TRAKCIE\">W TRAKCIE</option>\r\n                                <option value=\"ZROBIONY\">ZROBIONY</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {addProjectTask}) (AddProjectTask);\r\n","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\"\r\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\n class UpdateProjectTask extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      \"id\": \"\",\r\n      \"projectSequence\": \"\",\r\n      \"summary\": \"\",\r\n      \"acceptanceCriteria\": \"\",\r\n      \"status\": \"\",\r\n      \"priority\": \"\",\r\n      \"dueDate\": \"\",\r\n      \"projectIdentifier\": \"\",\r\n      \"create_At\": \"\",\r\n      \"errors\": {}\r\n    }\r\n    \r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {backlog_id, pt_id} = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    })\r\n\r\n    if(nextProps.errors){\r\n      this.setState({errors:nextProps.errors})\r\n     }\r\n  }\r\n\r\n\r\n  onChange(e) {\r\n    this.setState({[e.target.name]:e.target.value});\r\n}\r\n\r\nonSubmit(e){\r\n    e.preventDefault();\r\n\r\n    const updateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary:this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    }\r\n\r\n    this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updateProjectTask, this.props.history)\r\n    // console.log(updateProjectTask);\r\n    \r\n}\r\n\r\n  render() {\r\n\r\n    const {errors} = this.state\r\n\r\n    return (\r\n        <div className=\"add-PBI\">\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-8 m-auto\">\r\n                      <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                          Powrót do tablicy Projektu\r\n                      </Link>\r\n                      <h4 className=\"display-4 text-center\">Uaktualnienie zadania</h4>\r\n                      <p className=\"lead text-center\">Nazwa Projektu: {this.state.projectIdentifier} + ID Zadania: {this.state.projectSequence}</p>\r\n                      <form onSubmit={this.onSubmit}>\r\n                          <div className=\"form-group\">\r\n                              <input type=\"text\" \r\n                              className={classnames(\"form-control form-control-lg\", {\r\n                                  \"is-invalid\":errors.summary\r\n                              } )}\r\n                              name=\"summary\" \r\n                              placeholder=\"Streszczenie zadania\" \r\n                              value={this.state.summary}\r\n                              onChange={this.onChange}\r\n                              />\r\n                              {\r\n                                  errors.summary && (\r\n                                      <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                  )\r\n                              }\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                              <textarea className=\"form-control form-control-lg\" \r\n                              placeholder=\"Kryteria przyjęcia\" \r\n                              name=\"acceptanceCriteria\" \r\n                              value={this.state.acceptanceCriteria}\r\n                              onChange={this.onChange}\r\n                              />\r\n                          </div>\r\n                          <h6>Termin zadania</h6>\r\n                          <div className=\"form-group\">\r\n                              <input type=\"date\" \r\n                              className=\"form-control form-control-lg\" \r\n                              name=\"dueDate\" \r\n                              value={this.state.dueDate}\r\n                              onChange={this.onChange}\r\n                              />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                              <select className=\"form-control form-control-lg\" name=\"priority\"\r\n                              value={this.state.priority}\r\n                              onChange={this.onChange}\r\n                              >\r\n                                  <option value={0}>Wybierz priorytet</option>\r\n                                  <option value={1}>Wysoki</option>\r\n                                  <option value={2}>Średni</option>\r\n                                  <option value={3}>Niski</option>\r\n                              </select>\r\n                          </div>\r\n\r\n                          <div className=\"form-group\">\r\n                              <select className=\"form-control form-control-lg\" name=\"status\"\r\n                              value={this.state.status}\r\n                              onChange={this.onChange}\r\n                              >\r\n                                  <option value=\"\">Wybierz status</option>\r\n                                  <option value=\"DO ZROBIENIA\">DO ZROBIENIA</option>\r\n                                  <option value=\"W TRAKCIE\">W TRAKCIE</option>\r\n                                  <option value=\"ZROBIONY\">ZROBIONY</option>\r\n                              </select>\r\n                          </div>\r\n\r\n                          <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                      </form>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  projectTask: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n}) \r\n\r\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask}) (UpdateProjectTask)","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n class Landing extends Component {\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n          this.props.history.push(\"/dashboard\")\r\n        }\r\n      }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Management Tool</h1>\r\n                        <p className=\"lead\">\r\n                            Utwórz konto, dołącz do istniejacych projektów lub stwórz własny.\r\n                        </p>\r\n                        <hr />\r\n                        <Link className=\"btn btn-lg btn-info mr-2\" to=\"/register\" >\r\n                          Zarejestruj się\r\n                    </Link>\r\n                        <Link to=\"/login\" className=\"btn btn-lg btn-success mr-2\">\r\n                            Zaloguj się\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps) (Landing)\r\n","import React, { Component } from 'react'\r\nimport { createNewUser } from \"../../actions/securityActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\n class Register extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n        \"username\": \"\",\r\n        \"fullName\": \"\",\r\n        \"password\": \"\",\r\n        \"confirmPassword\": \"\",\r\n        \"errors\": {}\r\n    }\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\")\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n      if(nextProps.errors){\r\n          this.setState({errors: nextProps.errors})\r\n      }\r\n  }\r\n\r\n  onSubmit(e){\r\n      e.preventDefault()\r\n      const newUser = {\r\n        username: this.state.username,\r\n        fullName: this.state.fullName,\r\n        password: this.state.password,\r\n        confirmPassword: this.state.confirmPassword\r\n      }\r\n\r\n      console.log(newUser)\r\n\r\n      this.props.createNewUser(newUser, this.props.history)\r\n  }\r\n\r\n  onChange(e){\r\n    this.setState({[e.target.name]:e.target.value})\r\n  }\r\n\r\n  render() {\r\n\r\n    const {errors} = this.state;\r\n\r\n    return (\r\n        <div className=\"register\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Rejestracja</h1>\r\n                    <p className=\"lead text-center\">Utwórz Konto</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div \r\n                            className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.fullName\r\n                            })} \r\n                            placeholder=\"Imię i nazwisko\" name=\"fullName\"\r\n                            value={this.state.fullName} \r\n                            onChange={this.onChange}\r\n                            />\r\n                            {\r\n                                errors.fullName && (\r\n                                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                            \"is-invalid\":errors.username\r\n                            })}  \r\n                            placeholder=\"Email (Nazwa użytkownika)\" name=\"username\" \r\n                            value={this.state.username}\r\n                            onChange={this.onChange}\r\n                            />\r\n                            {\r\n                                errors.username && (\r\n                                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" \r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.password\r\n                                })}   \r\n                            placeholder=\"Hasło\" name=\"password\" \r\n                            value={this.state.password}\r\n                            onChange={this.onChange}\r\n                            />\r\n                            {\r\n                                errors.password && (\r\n                                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\":errors.confirmPassword\r\n                                })}    \r\n                                placeholder=\"Potwierdź hasło\"\r\n                                name=\"confirmPassword\" \r\n                                value={this.state.confirmPassword}\r\n                                onChange={this.onChange}\r\n                                />\r\n                                {\r\n                                    errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                    )\r\n                                }\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n  }\r\n}\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { createNewUser }) (Register)","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { login } from '../../actions/securityActions';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\")\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Zaloguj się</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.username\r\n                    })}\r\n                    placeholder=\"Email (Nazwa użytkownika)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.password\r\n                    })}\r\n                    placeholder=\"hasło\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecureRoute from './securityUtils/SecureRoute';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_token = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_token\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_token.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = '/';\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\n              <SecureRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecureRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecureRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecureRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}